Planning
Retrospective
Scrum Master
Show and Tell
Product Owner
Individuals and Interactions over processes and tools
Responding to change over following a plan
Working software 
Customer collaboration over contract negotiation
Maximising the work not done
Sustainable pace
Stories
BDD
Pair programming
Brooke's Law
Seven plus or minus two
Self-organising team
Pigs and Chickens
Extreme Programming
Theory of constraints
Waterfall
Big design upfront
Enough design upfront
Complexity estimation
Cynefin framework
Refactoring
The INVEST Acronym
As an X I can Y so that Z
The 3Cs
Inspect and Adapt
Empirical vs defined process
Kaizen
The andon line
Kanban
Dev Ops
Infrastructure as code
Application monitoring
Agile at scale
Blue Green release
Containerisation
Pivot
Actionable metric
Vanity metric
Root cause analysis - the 5 whys
Moscow prioritisation
The system as imagined vs the system as found
The product backlog
Planning Poker
No estimates
Kano analysis
The organisation as psychic prison
The Gervaise principle
Autonomation
YAGNI
Big Ball of Mud
Build one to throw away
A system of names
Burger Method
Plan, do, check, act
snowflakes, pets, cattle
Lean UX
Value Stream Mapping
Seven deadly wastes
Seven deadly wastes of software
Wicked problems
Cone of uncertainty
Programme anarchy
Mob programming
Fata Morgana
Hiding Hand
The inside view/the outside view
The planning fallacy
What you see is all there is
Information radiators
Colocation
Whole Team
Punctuated equilibria
minimum viable product
cycle time
death march project
Hyper-performing teams

