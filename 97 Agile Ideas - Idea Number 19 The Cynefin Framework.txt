# 97 Agile Ideas - Idea Number 19
# The Cynefin Framework

The Cynefin (pronounced "kinevin") framework is developed and expounded by the knowledge management researcher Dave Snowden.  Who runs courses and provides consultancy on the application of this framework and much more. And if you really want to know more about it, you should definitely check out his works.

My understanding of Cynefin is that there are four different kinds of problem. Simple problems, complicated problems, complex problems and chaotic problems.

Simple problems are the ones where not only is the problem well understood, but the solution is also well understood and is simple to apply.  The example that I often give for this is cake. Making cake is a simple problem to solve. There are recipes, there are ingredients and equipment. If you want a cake, that problem can be solved relatively easily using the recipes, ingredients and equipment. It's also important to understand that the value of cake is understood.  People like cake. So the value of spending time and money on ingredients on baking relative to the reward that the cake brings is one that's easily calculated.

Complicated problems are, well, a bit more complicated. Like in the simple problem space, the problems are well-understood and the solutions are well-understood, but applying the solutions requirement substantial amounts of learning, skill, understanding and training. Lots of problems are like this, from fixing old cars to removing someones inflamed appendix. The problems are understood, but to fix them requires substantial amounts of training and expertise. But as with the simple problem space, the value of fixing these problems is understood.

Complex problems on the other hand are a different animal altogether.  Here there is *some* understanding of the problems, and *some* understanding of the solutions.  But the partial understanding of both the problems and the solutions means that it's not uncommon for attempt to solve a problem to either fail, or only solve the problem to a disappointing degree.

Anybody who's had any experience of working on software development projects will probably already be getting the queasy feeling that this is the problem space that software development and also substantial chunks of management consultancy inhabit. Because the direct link between the problem and the solution and the effectiveness of the solution is lost in the complex space, any direct link between the costs of applying the solution and the benefit gained is also lost. And this is possibly why consultants who work is this complex space are so unpopular.

Finally there is the chaotic problem space.  In the chaotic problem space there isn't even any agreement on what the problem is, let alone what the solution might be. People who are forced (or decide by temperament) to work in this space are force to just try things to see if anything works. The link between the effort put in and the reward returned is totally lost. Lots of problem solving spaces are like this, creative endeavour, military conflict, the world of tech startups.

And in the middle of the Cynefin framework is disorder. Disorder is where you end up if you don't know which sector of the Cynefin framework the problem you're solving is in- then it's nearly impossible to solve it.  Training like a brain surgeon to bake cake is inexpensive and inappropriate. Treating becoming a bestselling novelist like it's a simple step-by-step process will not work. Treating software development as if given sufficient expertise the outcome is guaranteed, or even (this happens) treating software as if it's a simple process like baking a cake, will end it disaster. 
