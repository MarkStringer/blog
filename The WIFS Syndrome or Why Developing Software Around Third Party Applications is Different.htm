<html>
<head>
<title>
A Commonplace
</title>
<meta charset='utf-8'>
<link href='blogstyle.css' rel='stylesheet'>
</head>
<body id="main_body">
<div id="content">
<h3>A Commonplace</h3>
<span id="commonplace"><p><a href="http://en.wikipedia.org/wiki/Commonplace_book">What is a commonplace?</a></p></span>
<span id="link"><a href="/newblog">Index</a></span><span id="link"><a href="A Thought About the Hat Game.htm">Next</a></span><span id="link"><a href="Quotation From Grunch of Giants by Buckminster Fuller.htm">Previous</a></span><h3>30/3/2014</h3><h1>The WIFS Syndrome or Why Developing Software Around Third Party Applications is Different</h1>

<p>Most of the projects that I seem to get involved with these days involve third party software.  The idea is that the bulk of the functionality will be delivered by this third party software.  For me this is a total game-changer when it comes to software development - but I haven't really seen anybody writing about it - especially in the Agile community.  </p>

<p>The first problem is choosing the third party application (TPA?).  How do you decide which one to use?  I've tried to assess Kanban-style project management systems and it's a very difficult and painful process.  One company that I was doing some work for recently was going spare because they had the contract to maintain all the IT for another company.  The client company was a partnership, so if one of the partners asked to have some software installed on their computer, they couldn't really refuse.  But at the same time, they had no idea what that particular piece of software might do, how it would interact with other pieces of software.</p>

<p>There are some other weird things that happen as a result of this shift towards using TPA's.</p>

<ul>
<li>The order that requirements flow through testers, BA's and developers (and Product Owners, and other stakeholders) is massively disturbed.  I have my colleague <a href="https://www.linkedin.com/pub/ben-schofield/16/525/628">Ben Schofield</a> to thank for this idea. Now he's pointed out it's so obvious.
</li>
<li>Because the flow of requirements through BA's, testers, developers and stakeholders is different, this causes stresses and strains.
</li>
<li>Software is <a href="https://en.wiktionary.org/wiki/tractable">tractable</a>, this is dangerous when you're doing "greenfield" software development and it's even more dangerous if you're trying to customise a TPA.  It's mentioned as one of the main reasons that software is so difficult to manage in <a href="http://www.amazon.co.uk/gp/product/B000OZ0N6M?ie=UTF8&amp;camp=3194&amp;creative=21330&amp;creativeASIN=B000OZ0N6M&amp;linkCode=shr&amp;tag=theginmum-21&amp;=books&amp;qid=1396082978&amp;sr=1-1&amp;keywords=The+mythical+man-month">Fred Brooks' "The Mythical Man Month"</a> and it's why there's a picture of a <a href="http://en.wikipedia.org/wiki/Tarpit">tar pit</a> on the front cover of that book.
</li>
</ul>

<blockquote>
  <blockquote>
    <p>Animals are usually unable to escape from the asphalt when they fall in, making these pits excellent locations to excavate bones of prehistoric animals. The tar pits can trap animals because the asphalt that seeps up from underground forms a bitumen pit so thick that even mammoths find it impossible to free themselves before they die of starvation, exhaustion from trying to escape or from the heat that would come from the sun. Over one million fossils have been found in tar pits around the globe.</p>
  </blockquote>
</blockquote>

<ul>
<li>You probably need to start with what you want the system to do, but once you've opted for a particular package, you then have to switch to determining what the particular package <em>can</em> do.  And then, what can it do at scale? So you really want to be involving testers right from the beginning in scaling the solution before you do anything to it (or testing the minimum configuration).  You essentially want to wrap this thing with tests, functional tests, performance tests and maybe even security tests before you even start doing any development - and it would be a bad idea to get it out onto a release environment as well.  At the same time, you want the developers and the analysts to be figuring out what this application can do.
</li>
<li>What we're trying to avoid here is WIFS Syndrome (Word in Flight-Simulator).  Let's say that you want a word processing package for your organisation and your organisation - maybe because it has a slightly too-cosy relationship with the salesman from a particular Microsoft product division has decided they're going to implement this as customised version of Flight Simulator.  The Product Owner comes along to some early workshop meetings and says 
</li>
</ul>

<blockquote>
  <p>I want to be able to write letters with this software - can it do that straight out of the box?</p>
</blockquote>

<p>The developers scratch their head and say </p>

<blockquote>
  <p>No, we don't think it can.  </p>
</blockquote>

<p>Now the Product Owner comes up with the fateful question:</p>

<blockquote>
  <p>But could it do this, if you customised it a bit?</p>
</blockquote>

<p>And of course, because software is tractable.  The answer is always:</p>

<blockquote>
  <p>Yes.</p>
</blockquote>

<p><img src="TarPit.jpg" alt="Mid-Project Review Meeting" title="This Mid-Project Review Meeting isn't Going as Well as Expected" /></p>

<p><strong>"This Mid-Project Review Meeting isn't Going as Well as Expected"</strong></p>

<p>The developers start to get excited about how they could use the crop-spraying simulation and put weed-killer in the tanks of the crop-sprayer and therefore make brown marks on yellow cornfields and then by simply switching to the space-shuttle simulator we can view these cornfields from space as letters (yes, I know, something like this actually happened with <a href="http://en.wikipedia.org/wiki/PostScript">PostScript</a> - which started off as a way of capturing three-dimensional objects, like ships and buildings around New York Harbour - do we really want to go through <em>that</em> again?). This project is already starting to look <strong>expensive</strong>, <strong>error-prone</strong> and <strong>disastrously</strong> difficult to maintain (how is this stuff going to work with the next update to Flight Simulator? Thought so).  This project is looking pretty bad, especially compared to good old Microsoft Word which can actually write letters <em>out of the box</em>! I've worked on a project like this.</p>

<h2>What needs to happen to stop this?</h2>

<p>Testers, analysts, developers and product owners need to pick some minimum viable product requirements, and ideally pick the TPA based on those.  In order to do that, they probably need to implement some stories in <em>several</em> TPA's.  The selection of these stories should help coalesce the idea of what the minimum viable product is.  But the stories should also test what it's like to customise the TPA and push it a bit beyond its boundaries.</p>

<p>OK - let's try this.  What's the customer's archetypal story?</p>

<blockquote>
  <p><strong>Story 1: As a nephew I want to write a letter so that I can thank my great aunt for the lovely jumper she knitted me</strong></p>
</blockquote>

<p>And what's the outlier customisable story?</p>

<blockquote>
  <p><strong>Story 2: As a nephew I want to print out this letter to my Aunt so that it looks like it was done in mediaeval script on parchment</strong></p>
</blockquote>

<p>And how do these stories pan out in the two different applications that we've mentioned.</p>

<blockquote>
  <p><strong>In Word: Story 1 takes 1 hour (I know the devs said it would take "2 seconds", but what can you do?)</strong></p>
  
  <p><strong>In Flight Simulator: it's estimated to take 1-3 years and 3-10 million pounds (so probably about 30 million).</strong></p>
</blockquote>

<p>How about Story 2?</p>

<blockquote>
  <p><strong>In Word: The devs said a couple of days - it took a couple of weeks, but there are still a few problems.</strong></p>
  
  <p><strong>In Flight Simulator: 6 months to a year (so probably another 30 million pounds).</strong></p>
</blockquote>

<p><img src="bomber.jpg" alt="The punctuation Bomber" title="We're planning on using this for the full stops" /></p>

<p><strong>"We're planning on using this for the full stops"</strong></p>

<p>Some other things that I'm realising about this process as I'm writing.</p>

<ul>
<li><p>Understanding what your MVP is becomes even more important if you're dealing with TPA's.</p></li>
<li><p>Getting these stories onto a final environment (unless of course it becomes obvious that implementing these things in the TPA is too expensive) is really important as a way of understanding what the TPA can actually do. </p></li>
<li><p>And testing it with users, load testing it, exploratory testing it.  This is a point I picked up from <a href="http://lunivore.com/">Liz Keogh</a> - testers are really good at telling you why things won't work and how they're going to break - listen to them.</p></li>
<li><p>One of the values that you want to choose for these initial candidate/archetype stories is <em>orthogonality</em> - although this is 0slightly at cross-purposes (no pun intended) with the idea of an MVP.</p></li>
<li><p>Get an expert on the TPA in right from the start, if it's a new TPA these will probably have to be people from the company that wrote the TPA.  They'll seem expensive, but it's better to find out what magic needs to be wrought to make the TPA do what you want it to do now rather when you've bet the farm on Flight Simulator as a document solution.  That's when it's going to get <strong>really expensive</strong>.</p></li>
<li><p>I've worked on a programme of projects that were trying to develop Word in Flight Simulator.  The Flight Simulator consultants made a <em>TON</em> of money.  Surprisingly the whole programme was massively expensive and largely a failure.</p></li>
</ul>
</div>
</body>
</html>
